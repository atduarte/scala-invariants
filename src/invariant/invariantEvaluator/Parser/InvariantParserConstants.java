/* Generated By:JJTree&JavaCC: Do not edit this line. InvariantParserConstants.java */
/*Coisas p/ adicionar depois de compilar:
 SimpleNode:

  public Vector<Integer> operators;
  public String numVar;
  public boolean negative;
  public int getID() throws ParseException{
	return id;
  }


*/

package invariant.invariantEvaluator.Parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface InvariantParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int VAR = 4;
  /** RegularExpression Id. */
  int VAR_TAG = 5;
  /** RegularExpression Id. */
  int VAR_LOCAL = 6;
  /** RegularExpression Id. */
  int NUM = 7;
  /** RegularExpression Id. */
  int OR = 8;
  /** RegularExpression Id. */
  int AND = 9;
  /** RegularExpression Id. */
  int REC_BRAC_O = 10;
  /** RegularExpression Id. */
  int REC_BRAC_C = 11;
  /** RegularExpression Id. */
  int PAR_OPEN = 12;
  /** RegularExpression Id. */
  int PAR_CLOSE = 13;
  /** RegularExpression Id. */
  int PAR_SETO = 14;
  /** RegularExpression Id. */
  int PAR_SETC = 15;
  /** RegularExpression Id. */
  int COMMA = 16;
  /** RegularExpression Id. */
  int SEMMICOLON = 17;
  /** RegularExpression Id. */
  int EQUAL = 18;
  /** RegularExpression Id. */
  int NOTEQUAL = 19;
  /** RegularExpression Id. */
  int INF = 20;
  /** RegularExpression Id. */
  int OP_EXP = 21;
  /** RegularExpression Id. */
  int OP_SUM = 22;
  /** RegularExpression Id. */
  int OP_DIFF = 23;
  /** RegularExpression Id. */
  int OP_MUL = 24;
  /** RegularExpression Id. */
  int OP_DIV = 25;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "<VAR>",
    "\"var\"",
    "<VAR_LOCAL>",
    "<NUM>",
    "\"||\"",
    "\"&&\"",
    "\"[\"",
    "\"]\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\",\"",
    "\";\"",
    "\"=\"",
    "\"!=\"",
    "\"@inf\"",
    "\"^\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"\\n\"",
  };

}
